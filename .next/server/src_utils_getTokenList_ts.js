"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "src_utils_getTokenList_ts";
exports.ids = ["src_utils_getTokenList_ts"];
exports.modules = {

/***/ "./src/utils/ENS/parseENSAddress.ts":
/*!******************************************!*\
  !*** ./src/utils/ENS/parseENSAddress.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parseENSAddress\": () => (/* binding */ parseENSAddress),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/;\nfunction parseENSAddress(ensAddress) {\n    const match = ensAddress.match(ENS_NAME_REGEX);\n    if (!match) return undefined;\n    return {\n        ensName: `${match[1].toLowerCase()}eth`,\n        ensPath: match[4]\n    };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parseENSAddress);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvRU5TL3BhcnNlRU5TQWRkcmVzcy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLEtBQUssQ0FBQ0EsY0FBYztBQUViLFNBQVNDLGVBQWUsQ0FBQ0MsVUFBa0IsRUFBZ0UsQ0FBQztJQUNqSCxLQUFLLENBQUNDLEtBQUssR0FBR0QsVUFBVSxDQUFDQyxLQUFLLENBQUNILGNBQWM7SUFDN0MsRUFBRSxHQUFHRyxLQUFLLEVBQUUsTUFBTSxDQUFDQyxTQUFTO0lBQzVCLE1BQU0sQ0FBQyxDQUFDO1FBQUNDLE9BQU8sS0FBS0YsS0FBSyxDQUFDLENBQUMsRUFBRUcsV0FBVyxHQUFHLEdBQUc7UUFBR0MsT0FBTyxFQUFFSixLQUFLLENBQUMsQ0FBQztJQUFFLENBQUM7QUFDdkUsQ0FBQztBQUVELGlFQUFlRixlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGFuY2FrZS1mcm9udGVuZC8uL3NyYy91dGlscy9FTlMvcGFyc2VFTlNBZGRyZXNzLnRzPzJjOWEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRU5TX05BTUVfUkVHRVggPSAvXigoW2EtekEtWjAtOV0rKC1bYS16QS1aMC05XSspKlxcLikrKWV0aChcXC8uKik/JC9cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRU5TQWRkcmVzcyhlbnNBZGRyZXNzOiBzdHJpbmcpOiB7IGVuc05hbWU6IHN0cmluZzsgZW5zUGF0aDogc3RyaW5nIHwgdW5kZWZpbmVkIH0gfCB1bmRlZmluZWQge1xuICBjb25zdCBtYXRjaCA9IGVuc0FkZHJlc3MubWF0Y2goRU5TX05BTUVfUkVHRVgpXG4gIGlmICghbWF0Y2gpIHJldHVybiB1bmRlZmluZWRcbiAgcmV0dXJuIHsgZW5zTmFtZTogYCR7bWF0Y2hbMV0udG9Mb3dlckNhc2UoKX1ldGhgLCBlbnNQYXRoOiBtYXRjaFs0XSB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHBhcnNlRU5TQWRkcmVzc1xuIl0sIm5hbWVzIjpbIkVOU19OQU1FX1JFR0VYIiwicGFyc2VFTlNBZGRyZXNzIiwiZW5zQWRkcmVzcyIsIm1hdGNoIiwidW5kZWZpbmVkIiwiZW5zTmFtZSIsInRvTG93ZXJDYXNlIiwiZW5zUGF0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/ENS/parseENSAddress.ts\n");

/***/ }),

/***/ "./src/utils/contenthashToUri.ts":
/*!***************************************!*\
  !*** ./src/utils/contenthashToUri.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ contenthashToUri)\n/* harmony export */ });\n/* harmony import */ var cids__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cids */ \"cids\");\n/* harmony import */ var cids__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cids__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var multicodec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multicodec */ \"multicodec\");\n/* harmony import */ var multicodec__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(multicodec__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var multihashes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multihashes */ \"multihashes\");\n/* harmony import */ var multihashes__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(multihashes__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nfunction hexToUint8Array(hex) {\n    // eslint-disable-next-line no-param-reassign\n    hex = hex.startsWith('0x') ? hex.substr(2) : hex;\n    if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2');\n    const arr = new Uint8Array(hex.length / 2);\n    for(let i = 0; i < arr.length; i++){\n        arr[i] = parseInt(hex.substr(i * 2, 2), 16);\n    }\n    return arr;\n}\nconst UTF_8_DECODER = new TextDecoder();\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */ function contenthashToUri(contenthash) {\n    const buff = hexToUint8Array(contenthash);\n    const codec = (0,multicodec__WEBPACK_IMPORTED_MODULE_1__.getCodec)(buff) // the typing is wrong for @types/multicodec\n    ;\n    switch(codec){\n        case 'ipfs-ns':\n            {\n                const data = (0,multicodec__WEBPACK_IMPORTED_MODULE_1__.rmPrefix)(buff);\n                const cid = new (cids__WEBPACK_IMPORTED_MODULE_0___default())(data);\n                return `ipfs://${(0,multihashes__WEBPACK_IMPORTED_MODULE_2__.toB58String)(cid.multihash)}`;\n            }\n        case 'ipns-ns':\n            {\n                const data = (0,multicodec__WEBPACK_IMPORTED_MODULE_1__.rmPrefix)(buff);\n                const cid = new (cids__WEBPACK_IMPORTED_MODULE_0___default())(data);\n                const multihash = (0,multihashes__WEBPACK_IMPORTED_MODULE_2__.decode)(cid.multihash);\n                if (multihash.name === 'identity') {\n                    return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`;\n                }\n                return `ipns://${(0,multihashes__WEBPACK_IMPORTED_MODULE_2__.toB58String)(cid.multihash)}`;\n            }\n        default:\n            throw new Error(`Unrecognized codec: ${codec}`);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvY29udGVudGhhc2hUb1VyaS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXNCO0FBQ3lCO0FBQ0U7U0FFeENLLGVBQWUsQ0FBQ0MsR0FBVyxFQUFjLENBQUM7SUFDakQsRUFBNkM7SUFDN0NBLEdBQUcsR0FBR0EsR0FBRyxDQUFDQyxVQUFVLENBQUMsQ0FBSSxPQUFJRCxHQUFHLENBQUNFLE1BQU0sQ0FBQyxDQUFDLElBQUlGLEdBQUc7SUFDaEQsRUFBRSxFQUFFQSxHQUFHLENBQUNHLE1BQU0sR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssQ0FBQyxHQUFHLENBQUNDLEtBQUssQ0FBQyxDQUE0QztJQUN0RixLQUFLLENBQUNDLEdBQUcsR0FBRyxHQUFHLENBQUNDLFVBQVUsQ0FBQ04sR0FBRyxDQUFDRyxNQUFNLEdBQUcsQ0FBQztJQUN6QyxHQUFHLENBQUUsR0FBRyxDQUFDSSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdGLEdBQUcsQ0FBQ0YsTUFBTSxFQUFFSSxDQUFDLEdBQUksQ0FBQztRQUNwQ0YsR0FBRyxDQUFDRSxDQUFDLElBQUlDLFFBQVEsQ0FBQ1IsR0FBRyxDQUFDRSxNQUFNLENBQUNLLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUU7SUFDNUMsQ0FBQztJQUNELE1BQU0sQ0FBQ0YsR0FBRztBQUNaLENBQUM7QUFFRCxLQUFLLENBQUNJLGFBQWEsR0FBRyxHQUFHLENBQUNDLFdBQVc7QUFFckMsRUFHRzs7O0NBQUEsR0FDWSxRQUFRLENBQUNDLGdCQUFnQixDQUFDQyxXQUFtQixFQUFVLENBQUM7SUFDckUsS0FBSyxDQUFDQyxJQUFJLEdBQUdkLGVBQWUsQ0FBQ2EsV0FBVztJQUN4QyxLQUFLLENBQUNFLEtBQUssR0FBR25CLG9EQUFRLENBQUNrQixJQUFJLENBQVksQ0FBNEM7O0lBQ25GLE1BQU0sQ0FBRUMsS0FBSztRQUNYLElBQUksQ0FBQyxDQUFTO1lBQUUsQ0FBQztnQkFDZixLQUFLLENBQUNDLElBQUksR0FBR25CLG9EQUFRLENBQUNpQixJQUFJO2dCQUMxQixLQUFLLENBQUNHLEdBQUcsR0FBRyxHQUFHLENBQUN0Qiw2Q0FBRyxDQUFDcUIsSUFBSTtnQkFDeEIsTUFBTSxFQUFFLE9BQU8sRUFBRWpCLHdEQUFXLENBQUNrQixHQUFHLENBQUNDLFNBQVM7WUFDNUMsQ0FBQztRQUNELElBQUksQ0FBQyxDQUFTO1lBQUUsQ0FBQztnQkFDZixLQUFLLENBQUNGLElBQUksR0FBR25CLG9EQUFRLENBQUNpQixJQUFJO2dCQUMxQixLQUFLLENBQUNHLEdBQUcsR0FBRyxHQUFHLENBQUN0Qiw2Q0FBRyxDQUFDcUIsSUFBSTtnQkFDeEIsS0FBSyxDQUFDRSxTQUFTLEdBQUdwQixtREFBTSxDQUFDbUIsR0FBRyxDQUFDQyxTQUFTO2dCQUN0QyxFQUFFLEVBQUVBLFNBQVMsQ0FBQ0MsSUFBSSxLQUFLLENBQVUsV0FBRSxDQUFDO29CQUNsQyxNQUFNLEVBQUUsT0FBTyxFQUFFVCxhQUFhLENBQUNaLE1BQU0sQ0FBQ29CLFNBQVMsQ0FBQ0UsTUFBTSxFQUFFQyxJQUFJO2dCQUM5RCxDQUFDO2dCQUNELE1BQU0sRUFBRSxPQUFPLEVBQUV0Qix3REFBVyxDQUFDa0IsR0FBRyxDQUFDQyxTQUFTO1lBQzVDLENBQUM7O1lBRUMsS0FBSyxDQUFDLEdBQUcsQ0FBQ2IsS0FBSyxFQUFFLG9CQUFvQixFQUFFVSxLQUFLOztBQUVsRCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGFuY2FrZS1mcm9udGVuZC8uL3NyYy91dGlscy9jb250ZW50aGFzaFRvVXJpLnRzPzU2NzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENJRCBmcm9tICdjaWRzJ1xuaW1wb3J0IHsgZ2V0Q29kZWMsIHJtUHJlZml4IH0gZnJvbSAnbXVsdGljb2RlYydcbmltcG9ydCB7IGRlY29kZSwgdG9CNThTdHJpbmcgfSBmcm9tICdtdWx0aWhhc2hlcydcblxuZnVuY3Rpb24gaGV4VG9VaW50OEFycmF5KGhleDogc3RyaW5nKTogVWludDhBcnJheSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICBoZXggPSBoZXguc3RhcnRzV2l0aCgnMHgnKSA/IGhleC5zdWJzdHIoMikgOiBoZXhcbiAgaWYgKGhleC5sZW5ndGggJSAyICE9PSAwKSB0aHJvdyBuZXcgRXJyb3IoJ2hleCBtdXN0IGhhdmUgbGVuZ3RoIHRoYXQgaXMgbXVsdGlwbGUgb2YgMicpXG4gIGNvbnN0IGFyciA9IG5ldyBVaW50OEFycmF5KGhleC5sZW5ndGggLyAyKVxuICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgIGFycltpXSA9IHBhcnNlSW50KGhleC5zdWJzdHIoaSAqIDIsIDIpLCAxNilcbiAgfVxuICByZXR1cm4gYXJyXG59XG5cbmNvbnN0IFVURl84X0RFQ09ERVIgPSBuZXcgVGV4dERlY29kZXIoKVxuXG4vKipcbiAqIFJldHVybnMgdGhlIFVSSSByZXByZXNlbnRhdGlvbiBvZiB0aGUgY29udGVudCBoYXNoIGZvciBzdXBwb3J0ZWQgY29kZWNzXG4gKiBAcGFyYW0gY29udGVudGhhc2ggdG8gZGVjb2RlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbnRlbnRoYXNoVG9VcmkoY29udGVudGhhc2g6IHN0cmluZyk6IHN0cmluZyB7XG4gIGNvbnN0IGJ1ZmYgPSBoZXhUb1VpbnQ4QXJyYXkoY29udGVudGhhc2gpXG4gIGNvbnN0IGNvZGVjID0gZ2V0Q29kZWMoYnVmZiBhcyBCdWZmZXIpIC8vIHRoZSB0eXBpbmcgaXMgd3JvbmcgZm9yIEB0eXBlcy9tdWx0aWNvZGVjXG4gIHN3aXRjaCAoY29kZWMpIHtcbiAgICBjYXNlICdpcGZzLW5zJzoge1xuICAgICAgY29uc3QgZGF0YSA9IHJtUHJlZml4KGJ1ZmYgYXMgQnVmZmVyKVxuICAgICAgY29uc3QgY2lkID0gbmV3IENJRChkYXRhKVxuICAgICAgcmV0dXJuIGBpcGZzOi8vJHt0b0I1OFN0cmluZyhjaWQubXVsdGloYXNoKX1gXG4gICAgfVxuICAgIGNhc2UgJ2lwbnMtbnMnOiB7XG4gICAgICBjb25zdCBkYXRhID0gcm1QcmVmaXgoYnVmZiBhcyBCdWZmZXIpXG4gICAgICBjb25zdCBjaWQgPSBuZXcgQ0lEKGRhdGEpXG4gICAgICBjb25zdCBtdWx0aWhhc2ggPSBkZWNvZGUoY2lkLm11bHRpaGFzaClcbiAgICAgIGlmIChtdWx0aWhhc2gubmFtZSA9PT0gJ2lkZW50aXR5Jykge1xuICAgICAgICByZXR1cm4gYGlwbnM6Ly8ke1VURl84X0RFQ09ERVIuZGVjb2RlKG11bHRpaGFzaC5kaWdlc3QpLnRyaW0oKX1gXG4gICAgICB9XG4gICAgICByZXR1cm4gYGlwbnM6Ly8ke3RvQjU4U3RyaW5nKGNpZC5tdWx0aWhhc2gpfWBcbiAgICB9XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5yZWNvZ25pemVkIGNvZGVjOiAke2NvZGVjfWApXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJDSUQiLCJnZXRDb2RlYyIsInJtUHJlZml4IiwiZGVjb2RlIiwidG9CNThTdHJpbmciLCJoZXhUb1VpbnQ4QXJyYXkiLCJoZXgiLCJzdGFydHNXaXRoIiwic3Vic3RyIiwibGVuZ3RoIiwiRXJyb3IiLCJhcnIiLCJVaW50OEFycmF5IiwiaSIsInBhcnNlSW50IiwiVVRGXzhfREVDT0RFUiIsIlRleHREZWNvZGVyIiwiY29udGVudGhhc2hUb1VyaSIsImNvbnRlbnRoYXNoIiwiYnVmZiIsImNvZGVjIiwiZGF0YSIsImNpZCIsIm11bHRpaGFzaCIsIm5hbWUiLCJkaWdlc3QiLCJ0cmltIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/contenthashToUri.ts\n");

/***/ }),

/***/ "./src/utils/getTokenList.ts":
/*!***********************************!*\
  !*** ./src/utils/getTokenList.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getTokenList)\n/* harmony export */ });\n/* harmony import */ var _uniswap_token_lists_src_tokenlist_schema_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @uniswap/token-lists/src/tokenlist.schema.json */ \"./node_modules/@uniswap/token-lists/src/tokenlist.schema.json\");\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ajv */ \"ajv\");\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ajv__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _contenthashToUri__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contenthashToUri */ \"./src/utils/contenthashToUri.ts\");\n/* harmony import */ var _ENS_parseENSAddress__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ENS/parseENSAddress */ \"./src/utils/ENS/parseENSAddress.ts\");\n/* harmony import */ var _uriToHttp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./uriToHttp */ \"./src/utils/uriToHttp.ts\");\n\n\n\n\n\nconst tokenListValidator = new (ajv__WEBPACK_IMPORTED_MODULE_1___default())({\n    allErrors: true\n}).compile(_uniswap_token_lists_src_tokenlist_schema_json__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */ async function getTokenList(listUrl, resolveENSContentHash) {\n    const parsedENS = (0,_ENS_parseENSAddress__WEBPACK_IMPORTED_MODULE_3__.parseENSAddress)(listUrl);\n    let urls;\n    if (parsedENS) {\n        let contentHashUri;\n        try {\n            contentHashUri = await resolveENSContentHash(parsedENS.ensName);\n        } catch (error) {\n            console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error);\n            throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`);\n        }\n        let translatedUri;\n        try {\n            translatedUri = (0,_contenthashToUri__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(contentHashUri);\n        } catch (error1) {\n            console.error('Failed to translate contenthash to URI', contentHashUri);\n            throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`);\n        }\n        urls = (0,_uriToHttp__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(`${translatedUri}${parsedENS.ensPath ?? ''}`);\n    } else {\n        urls = (0,_uriToHttp__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(listUrl);\n    }\n    for(let i = 0; i < urls.length; i++){\n        const url = urls[i];\n        const isLast = i === urls.length - 1;\n        let response;\n        try {\n            response = await fetch(url);\n        } catch (error2) {\n            console.error('Failed to fetch list', listUrl, error2);\n            if (isLast) throw new Error(`Failed to download list ${listUrl}`);\n            continue;\n        }\n        if (!response.ok) {\n            if (isLast) throw new Error(`Failed to download list ${listUrl}`);\n            continue;\n        }\n        const json = await response.json();\n        if (!tokenListValidator(json)) {\n            const validationErrors = tokenListValidator.errors?.reduce((memo, error)=>{\n                const add = `${error.dataPath} ${error.message ?? ''}`;\n                return memo.length > 0 ? `${memo}; ${add}` : `${add}`;\n            }, '') ?? 'unknown error';\n            throw new Error(`Token list failed validation: ${validationErrors}`);\n        }\n        return json;\n    }\n    throw new Error('Unrecognized list URL protocol.');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TUFBTSxFQUFFQyxNQUFNLEVBQVVDLElBQUksRUFBRWhCLEtBQUssR0FBSyxDQUFDO2dCQUMxRCxLQUFLLENBQUNpQixHQUFHLE1BQU9qQixLQUFLLENBQVNrQixRQUFRLENBQUMsQ0FBQyxFQUFFbEIsS0FBSyxDQUFDbUIsT0FBTyxJQUFJLENBQUU7Z0JBQzdELE1BQU0sQ0FBQ0gsSUFBSSxDQUFDVixNQUFNLEdBQUcsQ0FBQyxNQUFNVSxJQUFJLENBQUMsRUFBRSxFQUFFQyxHQUFHLFFBQVFBLEdBQUc7WUFDckQsQ0FBQyxFQUFFLENBQUUsTUFBSyxDQUFlO1lBQzNCLEtBQUssQ0FBQyxHQUFHLENBQUNmLEtBQUssRUFBRSw4QkFBOEIsRUFBRVcsZ0JBQWdCO1FBQ25FLENBQUM7UUFDRCxNQUFNLENBQUNELElBQUk7SUFDYixDQUFDO0lBQ0QsS0FBSyxDQUFDLEdBQUcsQ0FBQ1YsS0FBSyxDQUFDLENBQWlDO0FBQ25ELENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wYW5jYWtlLWZyb250ZW5kLy4vc3JjL3V0aWxzL2dldFRva2VuTGlzdC50cz83YjQzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnRpbnVlICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1hd2FpdC1pbi1sb29wICovXG5pbXBvcnQgeyBUb2tlbkxpc3QgfSBmcm9tICdAdW5pc3dhcC90b2tlbi1saXN0cydcbmltcG9ydCBzY2hlbWEgZnJvbSAnQHVuaXN3YXAvdG9rZW4tbGlzdHMvc3JjL3Rva2VubGlzdC5zY2hlbWEuanNvbidcbmltcG9ydCBBanYgZnJvbSAnYWp2J1xuaW1wb3J0IGNvbnRlbnRoYXNoVG9VcmkgZnJvbSAnLi9jb250ZW50aGFzaFRvVXJpJ1xuaW1wb3J0IHsgcGFyc2VFTlNBZGRyZXNzIH0gZnJvbSAnLi9FTlMvcGFyc2VFTlNBZGRyZXNzJ1xuaW1wb3J0IHVyaVRvSHR0cCBmcm9tICcuL3VyaVRvSHR0cCdcblxuY29uc3QgdG9rZW5MaXN0VmFsaWRhdG9yID0gbmV3IEFqdih7IGFsbEVycm9yczogdHJ1ZSB9KS5jb21waWxlKHNjaGVtYSlcblxuLyoqXG4gKiBDb250YWlucyB0aGUgbG9naWMgZm9yIHJlc29sdmluZyBhIGxpc3QgVVJMIHRvIGEgdmFsaWRhdGVkIHRva2VuIGxpc3RcbiAqIEBwYXJhbSBsaXN0VXJsIGxpc3QgdXJsXG4gKiBAcGFyYW0gcmVzb2x2ZUVOU0NvbnRlbnRIYXNoIHJlc29sdmVzIGFuIGVucyBuYW1lIHRvIGEgY29udGVudGhhc2hcbiAqL1xuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gZ2V0VG9rZW5MaXN0KFxuICBsaXN0VXJsOiBzdHJpbmcsXG4gIHJlc29sdmVFTlNDb250ZW50SGFzaDogKGVuc05hbWU6IHN0cmluZykgPT4gUHJvbWlzZTxzdHJpbmc+LFxuKTogUHJvbWlzZTxUb2tlbkxpc3Q+IHtcbiAgY29uc3QgcGFyc2VkRU5TID0gcGFyc2VFTlNBZGRyZXNzKGxpc3RVcmwpXG4gIGxldCB1cmxzOiBzdHJpbmdbXVxuICBpZiAocGFyc2VkRU5TKSB7XG4gICAgbGV0IGNvbnRlbnRIYXNoVXJpXG4gICAgdHJ5IHtcbiAgICAgIGNvbnRlbnRIYXNoVXJpID0gYXdhaXQgcmVzb2x2ZUVOU0NvbnRlbnRIYXNoKHBhcnNlZEVOUy5lbnNOYW1lKVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBGYWlsZWQgdG8gcmVzb2x2ZSBFTlMgbmFtZTogJHtwYXJzZWRFTlMuZW5zTmFtZX1gLCBlcnJvcilcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHJlc29sdmUgRU5TIG5hbWU6ICR7cGFyc2VkRU5TLmVuc05hbWV9YClcbiAgICB9XG4gICAgbGV0IHRyYW5zbGF0ZWRVcmlcbiAgICB0cnkge1xuICAgICAgdHJhbnNsYXRlZFVyaSA9IGNvbnRlbnRoYXNoVG9VcmkoY29udGVudEhhc2hVcmkpXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byB0cmFuc2xhdGUgY29udGVudGhhc2ggdG8gVVJJJywgY29udGVudEhhc2hVcmkpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byB0cmFuc2xhdGUgY29udGVudGhhc2ggdG8gVVJJOiAke2NvbnRlbnRIYXNoVXJpfWApXG4gICAgfVxuICAgIHVybHMgPSB1cmlUb0h0dHAoYCR7dHJhbnNsYXRlZFVyaX0ke3BhcnNlZEVOUy5lbnNQYXRoID8/ICcnfWApXG4gIH0gZWxzZSB7XG4gICAgdXJscyA9IHVyaVRvSHR0cChsaXN0VXJsKVxuICB9XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdXJscy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IHVybCA9IHVybHNbaV1cbiAgICBjb25zdCBpc0xhc3QgPSBpID09PSB1cmxzLmxlbmd0aCAtIDFcbiAgICBsZXQgcmVzcG9uc2VcbiAgICB0cnkge1xuICAgICAgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwpXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBsaXN0JywgbGlzdFVybCwgZXJyb3IpXG4gICAgICBpZiAoaXNMYXN0KSB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBkb3dubG9hZCBsaXN0ICR7bGlzdFVybH1gKVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICBpZiAoaXNMYXN0KSB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBkb3dubG9hZCBsaXN0ICR7bGlzdFVybH1gKVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICBjb25zdCBqc29uID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgaWYgKCF0b2tlbkxpc3RWYWxpZGF0b3IoanNvbikpIHtcbiAgICAgIGNvbnN0IHZhbGlkYXRpb25FcnJvcnM6IHN0cmluZyA9XG4gICAgICAgIHRva2VuTGlzdFZhbGlkYXRvci5lcnJvcnM/LnJlZHVjZTxzdHJpbmc+KChtZW1vLCBlcnJvcikgPT4ge1xuICAgICAgICAgIGNvbnN0IGFkZCA9IGAkeyhlcnJvciBhcyBhbnkpLmRhdGFQYXRofSAke2Vycm9yLm1lc3NhZ2UgPz8gJyd9YFxuICAgICAgICAgIHJldHVybiBtZW1vLmxlbmd0aCA+IDAgPyBgJHttZW1vfTsgJHthZGR9YCA6IGAke2FkZH1gXG4gICAgICAgIH0sICcnKSA/PyAndW5rbm93biBlcnJvcidcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVG9rZW4gbGlzdCBmYWlsZWQgdmFsaWRhdGlvbjogJHt2YWxpZGF0aW9uRXJyb3JzfWApXG4gICAgfVxuICAgIHJldHVybiBqc29uIGFzIFRva2VuTGlzdFxuICB9XG4gIHRocm93IG5ldyBFcnJvcignVW5yZWNvZ25pemVkIGxpc3QgVVJMIHByb3RvY29sLicpXG59XG4iXSwibmFtZXMiOlsic2NoZW1hIiwiQWp2IiwiY29udGVudGhhc2hUb1VyaSIsInBhcnNlRU5TQWRkcmVzcyIsInVyaVRvSHR0cCIsInRva2VuTGlzdFZhbGlkYXRvciIsImFsbEVycm9ycyIsImNvbXBpbGUiLCJnZXRUb2tlbkxpc3QiLCJsaXN0VXJsIiwicmVzb2x2ZUVOU0NvbnRlbnRIYXNoIiwicGFyc2VkRU5TIiwidXJscyIsImNvbnRlbnRIYXNoVXJpIiwiZW5zTmFtZSIsImVycm9yIiwiY29uc29sZSIsIkVycm9yIiwidHJhbnNsYXRlZFVyaSIsImVuc1BhdGgiLCJpIiwibGVuZ3RoIiwidXJsIiwiaXNMYXN0IiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwianNvbiIsInZhbGlkYXRpb25FcnJvcnMiLCJlcnJvcnMiLCJyZWR1Y2UiLCJtZW1vIiwiYWRkIiwiZGF0YVBhdGgiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/getTokenList.ts\n");

/***/ }),

/***/ "./src/utils/uriToHttp.ts":
/*!********************************!*\
  !*** ./src/utils/uriToHttp.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ uriToHttp)\n/* harmony export */ });\n/* eslint-disable no-case-declarations */ /**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */ function uriToHttp(uri) {\n    const protocol = uri.split(':')[0].toLowerCase();\n    switch(protocol){\n        case 'https':\n            return [\n                uri\n            ];\n        case 'http':\n            return [\n                `https${uri.substr(4)}`,\n                uri\n            ];\n        case 'ipfs':\n            const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2];\n            return [\n                `https://cloudflare-ipfs.com/ipfs/${hash}/`,\n                `https://ipfs.io/ipfs/${hash}/`\n            ];\n        case 'ipns':\n            const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2];\n            return [\n                `https://cloudflare-ipfs.com/ipns/${name}/`,\n                `https://ipfs.io/ipns/${name}/`\n            ];\n        default:\n            return [];\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvdXJpVG9IdHRwLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxFQUF5Qyx3Q0FDekMsRUFHRzs7O0NBQUEsR0FDWSxRQUFRLENBQUNBLFNBQVMsQ0FBQ0MsR0FBVyxFQUFZLENBQUM7SUFDeEQsS0FBSyxDQUFDQyxRQUFRLEdBQUdELEdBQUcsQ0FBQ0UsS0FBSyxDQUFDLENBQUcsSUFBRSxDQUFDLEVBQUVDLFdBQVc7SUFDOUMsTUFBTSxDQUFFRixRQUFRO1FBQ2QsSUFBSSxDQUFDLENBQU87WUFDVixNQUFNLENBQUMsQ0FBQ0Q7Z0JBQUFBLEdBQUc7WUFBQSxDQUFDO1FBQ2QsSUFBSSxDQUFDLENBQU07WUFDVCxNQUFNLENBQUMsQ0FBQztpQkFBQyxLQUFLLEVBQUVBLEdBQUcsQ0FBQ0ksTUFBTSxDQUFDLENBQUM7Z0JBQUtKLEdBQUc7WUFBQSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxDQUFNO1lBQ1QsS0FBSyxDQUFDSyxJQUFJLEdBQUdMLEdBQUcsQ0FBQ00sS0FBSywwQkFBMEIsQ0FBQztZQUNqRCxNQUFNLENBQUMsQ0FBQztpQkFBQyxpQ0FBaUMsRUFBRUQsSUFBSSxDQUFDLENBQUM7aUJBQUkscUJBQXFCLEVBQUVBLElBQUksQ0FBQyxDQUFDO1lBQUMsQ0FBQztRQUN2RixJQUFJLENBQUMsQ0FBTTtZQUNULEtBQUssQ0FBQ0UsSUFBSSxHQUFHUCxHQUFHLENBQUNNLEtBQUssMEJBQTBCLENBQUM7WUFDakQsTUFBTSxDQUFDLENBQUM7aUJBQUMsaUNBQWlDLEVBQUVDLElBQUksQ0FBQyxDQUFDO2lCQUFJLHFCQUFxQixFQUFFQSxJQUFJLENBQUMsQ0FBQztZQUFDLENBQUM7O1lBRXJGLE1BQU0sQ0FBQyxDQUFDLENBQUM7O0FBRWYsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BhbmNha2UtZnJvbnRlbmQvLi9zcmMvdXRpbHMvdXJpVG9IdHRwLnRzP2Q2NGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tY2FzZS1kZWNsYXJhdGlvbnMgKi9cbi8qKlxuICogR2l2ZW4gYSBVUkkgdGhhdCBtYXkgYmUgaXBmcywgaXBucywgaHR0cCwgb3IgaHR0cHMgcHJvdG9jb2wsIHJldHVybiB0aGUgZmV0Y2gtYWJsZSBodHRwKHMpIFVSTHMgZm9yIHRoZSBzYW1lIGNvbnRlbnRcbiAqIEBwYXJhbSB1cmkgdG8gY29udmVydCB0byBmZXRjaC1hYmxlIGh0dHAgdXJsXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVyaVRvSHR0cCh1cmk6IHN0cmluZyk6IHN0cmluZ1tdIHtcbiAgY29uc3QgcHJvdG9jb2wgPSB1cmkuc3BsaXQoJzonKVswXS50b0xvd2VyQ2FzZSgpXG4gIHN3aXRjaCAocHJvdG9jb2wpIHtcbiAgICBjYXNlICdodHRwcyc6XG4gICAgICByZXR1cm4gW3VyaV1cbiAgICBjYXNlICdodHRwJzpcbiAgICAgIHJldHVybiBbYGh0dHBzJHt1cmkuc3Vic3RyKDQpfWAsIHVyaV1cbiAgICBjYXNlICdpcGZzJzpcbiAgICAgIGNvbnN0IGhhc2ggPSB1cmkubWF0Y2goL15pcGZzOihcXC9cXC8pPyguKikkL2kpPy5bMl1cbiAgICAgIHJldHVybiBbYGh0dHBzOi8vY2xvdWRmbGFyZS1pcGZzLmNvbS9pcGZzLyR7aGFzaH0vYCwgYGh0dHBzOi8vaXBmcy5pby9pcGZzLyR7aGFzaH0vYF1cbiAgICBjYXNlICdpcG5zJzpcbiAgICAgIGNvbnN0IG5hbWUgPSB1cmkubWF0Y2goL15pcG5zOihcXC9cXC8pPyguKikkL2kpPy5bMl1cbiAgICAgIHJldHVybiBbYGh0dHBzOi8vY2xvdWRmbGFyZS1pcGZzLmNvbS9pcG5zLyR7bmFtZX0vYCwgYGh0dHBzOi8vaXBmcy5pby9pcG5zLyR7bmFtZX0vYF1cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIFtdXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJ1cmlUb0h0dHAiLCJ1cmkiLCJwcm90b2NvbCIsInNwbGl0IiwidG9Mb3dlckNhc2UiLCJzdWJzdHIiLCJoYXNoIiwibWF0Y2giLCJuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/uriToHttp.ts\n");

/***/ }),

/***/ "./node_modules/@uniswap/token-lists/src/tokenlist.schema.json":
/*!*********************************************************************!*\
  !*** ./node_modules/@uniswap/token-lists/src/tokenlist.schema.json ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","$id":"https://uniswap.org/tokenlist.schema.json","title":"Uniswap Token List","description":"Schema for lists of tokens compatible with the Uniswap Interface","definitions":{"Version":{"type":"object","description":"The version of the list, used in change detection","examples":[{"major":1,"minor":0,"patch":0}],"additionalProperties":false,"properties":{"major":{"type":"integer","description":"The major version of the list. Must be incremented when tokens are removed from the list or token addresses are changed.","minimum":0,"examples":[1,2]},"minor":{"type":"integer","description":"The minor version of the list. Must be incremented when tokens are added to the list.","minimum":0,"examples":[0,1]},"patch":{"type":"integer","description":"The patch version of the list. Must be incremented for any changes to the list.","minimum":0,"examples":[0,1]}},"required":["major","minor","patch"]},"TagIdentifier":{"type":"string","description":"The unique identifier of a tag","minLength":1,"maxLength":10,"pattern":"^[\\\\w]+$","examples":["compound","stablecoin"]},"ExtensionIdentifier":{"type":"string","description":"The name of a token extension property","minLength":1,"maxLength":40,"pattern":"^[\\\\w]+$","examples":["color","is_fee_on_transfer","aliases"]},"ExtensionMap":{"type":"object","description":"An object containing any arbitrary or vendor-specific token metadata","maxProperties":10,"propertyNames":{"$ref":"#/definitions/ExtensionIdentifier"},"additionalProperties":{"$ref":"#/definitions/ExtensionValue"},"examples":[{"color":"#000000","is_verified_by_me":true},{"x-bridged-addresses-by-chain":{"1":{"bridgeAddress":"0x4200000000000000000000000000000000000010","tokenAddress":"0x4200000000000000000000000000000000000010"}}}]},"ExtensionPrimitiveValue":{"anyOf":[{"type":"string","minLength":1,"maxLength":42,"examples":["#00000"]},{"type":"boolean","examples":[true]},{"type":"number","examples":[15]},{"type":"null"}]},"ExtensionValue":{"anyOf":[{"$ref":"#/definitions/ExtensionPrimitiveValue"},{"type":"object","maxProperties":10,"propertyNames":{"$ref":"#/definitions/ExtensionIdentifier"},"additionalProperties":{"$ref":"#/definitions/ExtensionValueInner0"}}]},"ExtensionValueInner0":{"anyOf":[{"$ref":"#/definitions/ExtensionPrimitiveValue"},{"type":"object","maxProperties":10,"propertyNames":{"$ref":"#/definitions/ExtensionIdentifier"},"additionalProperties":{"$ref":"#/definitions/ExtensionValueInner1"}}]},"ExtensionValueInner1":{"anyOf":[{"$ref":"#/definitions/ExtensionPrimitiveValue"}]},"TagDefinition":{"type":"object","description":"Definition of a tag that can be associated with a token via its identifier","additionalProperties":false,"properties":{"name":{"type":"string","description":"The name of the tag","pattern":"^[ \\\\w]+$","minLength":1,"maxLength":20},"description":{"type":"string","description":"A user-friendly description of the tag","pattern":"^[ \\\\w\\\\.,:]+$","minLength":1,"maxLength":200}},"required":["name","description"],"examples":[{"name":"Stablecoin","description":"A token with value pegged to another asset"}]},"TokenInfo":{"type":"object","description":"Metadata for a single token in a token list","additionalProperties":false,"properties":{"chainId":{"type":"integer","description":"The chain ID of the Ethereum network where this token is deployed","minimum":1,"examples":[1,42]},"address":{"type":"string","description":"The checksummed address of the token on the specified chain ID","pattern":"^0x[a-fA-F0-9]{40}$","examples":["0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"]},"decimals":{"type":"integer","description":"The number of decimals for the token balance","minimum":0,"maximum":255,"examples":[18]},"name":{"type":"string","description":"The name of the token","minLength":1,"maxLength":40,"pattern":"^[ \\\\w.\'+\\\\-%/À-ÖØ-öø-ÿ:&\\\\[\\\\]\\\\(\\\\)]+$","examples":["USD Coin"]},"symbol":{"type":"string","description":"The symbol for the token; must be alphanumeric","pattern":"^[a-zA-Z0-9+\\\\-%/$.]+$","minLength":1,"maxLength":20,"examples":["USDC"]},"logoURI":{"type":"string","description":"A URI to the token logo asset; if not set, interface will attempt to find a logo based on the token address; suggest SVG or PNG of size 64x64","format":"uri","examples":["ipfs://QmXfzKRvjZz3u5JRgC4v5mGVbm9ahrUiB4DgzHBsnWbTMM"]},"tags":{"type":"array","description":"An array of tag identifiers associated with the token; tags are defined at the list level","items":{"$ref":"#/definitions/TagIdentifier"},"maxItems":10,"examples":["stablecoin","compound"]},"extensions":{"$ref":"#/definitions/ExtensionMap"}},"required":["chainId","address","decimals","name","symbol"]}},"type":"object","additionalProperties":false,"properties":{"name":{"type":"string","description":"The name of the token list","minLength":1,"maxLength":20,"pattern":"^[\\\\w ]+$","examples":["My Token List"]},"timestamp":{"type":"string","format":"date-time","description":"The timestamp of this list version; i.e. when this immutable version of the list was created"},"version":{"$ref":"#/definitions/Version"},"tokens":{"type":"array","description":"The list of tokens included in the list","items":{"$ref":"#/definitions/TokenInfo"},"minItems":1,"maxItems":10000},"keywords":{"type":"array","description":"Keywords associated with the contents of the list; may be used in list discoverability","items":{"type":"string","description":"A keyword to describe the contents of the list","minLength":1,"maxLength":20,"pattern":"^[\\\\w ]+$","examples":["compound","lending","personal tokens"]},"maxItems":20,"uniqueItems":true},"tags":{"type":"object","description":"A mapping of tag identifiers to their name and description","propertyNames":{"$ref":"#/definitions/TagIdentifier"},"additionalProperties":{"$ref":"#/definitions/TagDefinition"},"maxProperties":20,"examples":[{"stablecoin":{"name":"Stablecoin","description":"A token with value pegged to another asset"}}]},"logoURI":{"type":"string","description":"A URI for the logo of the token list; prefer SVG or PNG of size 256x256","format":"uri","examples":["ipfs://QmXfzKRvjZz3u5JRgC4v5mGVbm9ahrUiB4DgzHBsnWbTMM"]}},"required":["name","timestamp","version","tokens"]}');

/***/ })

};
;